// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KakaIMMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "KakaImmessage.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - KIMProtoKakaImmessageRoot

@implementation KIMProtoKakaImmessageRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - KIMProtoKakaImmessageRoot_FileDescriptor

static GPBFileDescriptor *KIMProtoKakaImmessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"kakaIM.Node"
                                                 objcPrefix:@"KIMProto"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum KIMProtoUserGenderType

GPBEnumDescriptor *KIMProtoUserGenderType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Male\000Female\000Unkown\000";
    static const int32_t values[] = {
        KIMProtoUserGenderType_Male,
        KIMProtoUserGenderType_Female,
        KIMProtoUserGenderType_Unkown,
    };
    static const char *extraTextFormatInfo = "\003\000\004\000\001\006\000\002\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoUserGenderType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoUserGenderType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoUserGenderType_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoUserGenderType_Male:
    case KIMProtoUserGenderType_Female:
    case KIMProtoUserGenderType_Unkown:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoRequestSessionIDMessage

@implementation KIMProtoRequestSessionIDMessage


typedef struct KIMProtoRequestSessionIDMessage__storage_ {
  uint32_t _has_storage_[1];
} KIMProtoRequestSessionIDMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoRequestSessionIDMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(KIMProtoRequestSessionIDMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoResponseSessionIDMessage

@implementation KIMProtoResponseSessionIDMessage

@dynamic hasSessionId, sessionId;
@dynamic hasStatus, status;

typedef struct KIMProtoResponseSessionIDMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoResponseSessionIDMessage_Status status;
  NSString *sessionId;
} KIMProtoResponseSessionIDMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoResponseSessionIDMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseSessionIDMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoResponseSessionIDMessage_Status_Success,
        .core.name = "status",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseSessionIDMessage_Status_EnumDescriptor,
        .core.number = KIMProtoResponseSessionIDMessage_FieldNumber_Status,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseSessionIDMessage__storage_, status),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoResponseSessionIDMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoResponseSessionIDMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoResponseSessionIDMessage_Status

GPBEnumDescriptor *KIMProtoResponseSessionIDMessage_Status_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000ServerInterlnalError\000";
    static const int32_t values[] = {
        KIMProtoResponseSessionIDMessage_Status_Success,
        KIMProtoResponseSessionIDMessage_Status_ServerInterlnalError,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\024\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseSessionIDMessage_Status)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseSessionIDMessage_Status_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseSessionIDMessage_Status_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseSessionIDMessage_Status_Success:
    case KIMProtoResponseSessionIDMessage_Status_ServerInterlnalError:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoLoginMessage

@implementation KIMProtoLoginMessage

@dynamic hasSessionId, sessionId;
@dynamic hasUserAccount, userAccount;
@dynamic hasUserPassword, userPassword;

typedef struct KIMProtoLoginMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *userAccount;
  NSString *userPassword;
} KIMProtoLoginMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoLoginMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoLoginMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoLoginMessage_FieldNumber_UserAccount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoLoginMessage__storage_, userAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userPassword",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoLoginMessage_FieldNumber_UserPassword,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoLoginMessage__storage_, userPassword),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoLoginMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoLoginMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\013\000\003\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoResponseLoginMessage

@implementation KIMProtoResponseLoginMessage

@dynamic hasSessionId, sessionId;
@dynamic hasLoginState, loginState;
@dynamic hasFailureError, failureError;

typedef struct KIMProtoResponseLoginMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoResponseLoginMessage_LoginState loginState;
  KIMProtoResponseLoginMessage_FailureError failureError;
  NSString *sessionId;
} KIMProtoResponseLoginMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoResponseLoginMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseLoginMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoResponseLoginMessage_LoginState_Success,
        .core.name = "loginState",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseLoginMessage_LoginState_EnumDescriptor,
        .core.number = KIMProtoResponseLoginMessage_FieldNumber_LoginState,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseLoginMessage__storage_, loginState),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueEnum = KIMProtoResponseLoginMessage_FailureError_WrongAccountOrPassword,
        .core.name = "failureError",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseLoginMessage_FailureError_EnumDescriptor,
        .core.number = KIMProtoResponseLoginMessage_FieldNumber_FailureError,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseLoginMessage__storage_, failureError),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoResponseLoginMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoResponseLoginMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\n\000\003\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoResponseLoginMessage_LoginState

GPBEnumDescriptor *KIMProtoResponseLoginMessage_LoginState_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoResponseLoginMessage_LoginState_Success,
        KIMProtoResponseLoginMessage_LoginState_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseLoginMessage_LoginState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseLoginMessage_LoginState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseLoginMessage_LoginState_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseLoginMessage_LoginState_Success:
    case KIMProtoResponseLoginMessage_LoginState_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum KIMProtoResponseLoginMessage_FailureError

GPBEnumDescriptor *KIMProtoResponseLoginMessage_FailureError_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "WrongAccountOrPassword\000ServerInternalErr"
        "or\000";
    static const int32_t values[] = {
        KIMProtoResponseLoginMessage_FailureError_WrongAccountOrPassword,
        KIMProtoResponseLoginMessage_FailureError_ServerInternalError,
    };
    static const char *extraTextFormatInfo = "\002\000\026\000\001\023\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseLoginMessage_FailureError)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseLoginMessage_FailureError_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseLoginMessage_FailureError_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseLoginMessage_FailureError_WrongAccountOrPassword:
    case KIMProtoResponseLoginMessage_FailureError_ServerInternalError:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoRegisterMessage

@implementation KIMProtoRegisterMessage

@dynamic hasUserAccount, userAccount;
@dynamic hasUserPassword, userPassword;
@dynamic hasUserNickName, userNickName;
@dynamic hasSex, sex;

typedef struct KIMProtoRegisterMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoRegisterMessage_UserSex sex;
  NSString *userAccount;
  NSString *userPassword;
  NSString *userNickName;
} KIMProtoRegisterMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "userAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoRegisterMessage_FieldNumber_UserAccount,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoRegisterMessage__storage_, userAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userPassword",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoRegisterMessage_FieldNumber_UserPassword,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoRegisterMessage__storage_, userPassword),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userNickName",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoRegisterMessage_FieldNumber_UserNickName,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoRegisterMessage__storage_, userNickName),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoRegisterMessage_UserSex_Unkown,
        .core.name = "sex",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoRegisterMessage_UserSex_EnumDescriptor,
        .core.number = KIMProtoRegisterMessage_FieldNumber_Sex,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoRegisterMessage__storage_, sex),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoRegisterMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoRegisterMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\013\000\002\014\000\003\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoRegisterMessage_UserSex

GPBEnumDescriptor *KIMProtoRegisterMessage_UserSex_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Male\000Female\000Unkown\000";
    static const int32_t values[] = {
        KIMProtoRegisterMessage_UserSex_Male,
        KIMProtoRegisterMessage_UserSex_Female,
        KIMProtoRegisterMessage_UserSex_Unkown,
    };
    static const char *extraTextFormatInfo = "\003\000$\000\001&\000\002\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoRegisterMessage_UserSex)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoRegisterMessage_UserSex_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoRegisterMessage_UserSex_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoRegisterMessage_UserSex_Male:
    case KIMProtoRegisterMessage_UserSex_Female:
    case KIMProtoRegisterMessage_UserSex_Unkown:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoResponseRegisterMessage

@implementation KIMProtoResponseRegisterMessage

@dynamic hasRegisterState, registerState;
@dynamic hasFailureError, failureError;

typedef struct KIMProtoResponseRegisterMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoResponseRegisterMessage_RegisterState registerState;
  KIMProtoResponseRegisterMessage_FailureError failureError;
} KIMProtoResponseRegisterMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = KIMProtoResponseRegisterMessage_RegisterState_Success,
        .core.name = "registerState",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseRegisterMessage_RegisterState_EnumDescriptor,
        .core.number = KIMProtoResponseRegisterMessage_FieldNumber_RegisterState,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseRegisterMessage__storage_, registerState),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueEnum = KIMProtoResponseRegisterMessage_FailureError_AccountAlreadyExists,
        .core.name = "failureError",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseRegisterMessage_FailureError_EnumDescriptor,
        .core.number = KIMProtoResponseRegisterMessage_FieldNumber_FailureError,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseRegisterMessage__storage_, failureError),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoResponseRegisterMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoResponseRegisterMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\r\000\002\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoResponseRegisterMessage_RegisterState

GPBEnumDescriptor *KIMProtoResponseRegisterMessage_RegisterState_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoResponseRegisterMessage_RegisterState_Success,
        KIMProtoResponseRegisterMessage_RegisterState_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseRegisterMessage_RegisterState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseRegisterMessage_RegisterState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseRegisterMessage_RegisterState_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseRegisterMessage_RegisterState_Success:
    case KIMProtoResponseRegisterMessage_RegisterState_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum KIMProtoResponseRegisterMessage_FailureError

GPBEnumDescriptor *KIMProtoResponseRegisterMessage_FailureError_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "AccountAlreadyExists\000ServerInternalError"
        "\000";
    static const int32_t values[] = {
        KIMProtoResponseRegisterMessage_FailureError_AccountAlreadyExists,
        KIMProtoResponseRegisterMessage_FailureError_ServerInternalError,
    };
    static const char *extraTextFormatInfo = "\002\000\024\000\001\023\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseRegisterMessage_FailureError)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseRegisterMessage_FailureError_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseRegisterMessage_FailureError_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseRegisterMessage_FailureError_AccountAlreadyExists:
    case KIMProtoResponseRegisterMessage_FailureError_ServerInternalError:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoHeartBeatMessage

@implementation KIMProtoHeartBeatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasTimestamp, timestamp;

typedef struct KIMProtoHeartBeatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *timestamp;
} KIMProtoHeartBeatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoHeartBeatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoHeartBeatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoHeartBeatMessage_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoHeartBeatMessage__storage_, timestamp),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoHeartBeatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoHeartBeatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoResponseHeartBeatMessage

@implementation KIMProtoResponseHeartBeatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasTimestamp, timestamp;

typedef struct KIMProtoResponseHeartBeatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *timestamp;
} KIMProtoResponseHeartBeatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoResponseHeartBeatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoResponseHeartBeatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoResponseHeartBeatMessage_FieldNumber_Timestamp,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoResponseHeartBeatMessage__storage_, timestamp),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoResponseHeartBeatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoResponseHeartBeatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoLogoutMessage

@implementation KIMProtoLogoutMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfflineMaileState, offlineMaileState;

typedef struct KIMProtoLogoutMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoLogoutMessage_OfflineMailState offlineMaileState;
  NSString *sessionId;
} KIMProtoLogoutMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoLogoutMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoLogoutMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoLogoutMessage_OfflineMailState_Open,
        .core.name = "offlineMaileState",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoLogoutMessage_OfflineMailState_EnumDescriptor,
        .core.number = KIMProtoLogoutMessage_FieldNumber_OfflineMaileState,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoLogoutMessage__storage_, offlineMaileState),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoLogoutMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoLogoutMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoLogoutMessage_OfflineMailState

GPBEnumDescriptor *KIMProtoLogoutMessage_OfflineMailState_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Open\000Close\000";
    static const int32_t values[] = {
        KIMProtoLogoutMessage_OfflineMailState_Open,
        KIMProtoLogoutMessage_OfflineMailState_Close,
    };
    static const char *extraTextFormatInfo = "\002\000\004\000\001\005\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoLogoutMessage_OfflineMailState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoLogoutMessage_OfflineMailState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoLogoutMessage_OfflineMailState_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoLogoutMessage_OfflineMailState_Open:
    case KIMProtoLogoutMessage_OfflineMailState_Close:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoResponseLogoutMessage

@implementation KIMProtoResponseLogoutMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfflineMaileState, offlineMaileState;

typedef struct KIMProtoResponseLogoutMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoResponseLogoutMessage_OfflineMailState offlineMaileState;
  NSString *sessionId;
} KIMProtoResponseLogoutMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoResponseLogoutMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseLogoutMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoResponseLogoutMessage_OfflineMailState_Open,
        .core.name = "offlineMaileState",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoResponseLogoutMessage_OfflineMailState_EnumDescriptor,
        .core.number = KIMProtoResponseLogoutMessage_FieldNumber_OfflineMaileState,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoResponseLogoutMessage__storage_, offlineMaileState),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoResponseLogoutMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoResponseLogoutMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoResponseLogoutMessage_OfflineMailState

GPBEnumDescriptor *KIMProtoResponseLogoutMessage_OfflineMailState_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Open\000Close\000";
    static const int32_t values[] = {
        KIMProtoResponseLogoutMessage_OfflineMailState_Open,
        KIMProtoResponseLogoutMessage_OfflineMailState_Close,
    };
    static const char *extraTextFormatInfo = "\002\000\004\000\001\005\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoResponseLogoutMessage_OfflineMailState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoResponseLogoutMessage_OfflineMailState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoResponseLogoutMessage_OfflineMailState_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoResponseLogoutMessage_OfflineMailState_Open:
    case KIMProtoResponseLogoutMessage_OfflineMailState_Close:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoBuildingRelationshipRequestMessage

@implementation KIMProtoBuildingRelationshipRequestMessage

@dynamic hasSessionId, sessionId;
@dynamic hasApplicantId, applicantId;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasIntroduction, introduction;
@dynamic hasSign, sign;
@dynamic hasSubmissionTime, submissionTime;

typedef struct KIMProtoBuildingRelationshipRequestMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *sponsorAccount;
  NSString *targetAccount;
  NSString *introduction;
  NSString *sign;
  NSString *submissionTime;
  uint64_t applicantId;
} KIMProtoBuildingRelationshipRequestMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "applicantId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_ApplicantId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, applicantId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sponsorAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SponsorAccount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, sponsorAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_TargetAccount,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, targetAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "introduction",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_Introduction,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, introduction),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_Sign,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, sign),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "submissionTime",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SubmissionTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipRequestMessage__storage_, submissionTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoBuildingRelationshipRequestMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoBuildingRelationshipRequestMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\003\016\000\004\r\000\007\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoBuildingRelationshipAnswerMessage

@implementation KIMProtoBuildingRelationshipAnswerMessage

@dynamic hasSessionId, sessionId;
@dynamic hasApplicantId, applicantId;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasAnswer, answer;
@dynamic hasHandleTime, handleTime;

typedef struct KIMProtoBuildingRelationshipAnswerMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer answer;
  NSString *sessionId;
  NSString *targetAccount;
  NSString *sponsorAccount;
  NSString *handleTime;
  uint64_t applicantId;
} KIMProtoBuildingRelationshipAnswerMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "applicantId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_ApplicantId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, applicantId),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeUInt64,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "targetAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_TargetAccount,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, targetAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_SponsorAccount,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, sponsorAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Accept,
        .core.name = "answer",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_EnumDescriptor,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_Answer,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, answer),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "handleTime",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_HandleTime,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoBuildingRelationshipAnswerMessage__storage_, handleTime),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoBuildingRelationshipAnswerMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoBuildingRelationshipAnswerMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\003\r\000\004\016\000\006\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer

GPBEnumDescriptor *KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Accept\000Reject\000";
    static const int32_t values[] = {
        KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Accept,
        KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Reject,
    };
    static const char *extraTextFormatInfo = "\002\000\006\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Accept:
    case KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Reject:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoDestroyingRelationshipRequestMessage

@implementation KIMProtoDestroyingRelationshipRequestMessage

@dynamic hasSessionId, sessionId;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasSign, sign;

typedef struct KIMProtoDestroyingRelationshipRequestMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *sponsorAccount;
  NSString *targetAccount;
  NSString *sign;
} KIMProtoDestroyingRelationshipRequestMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoDestroyingRelationshipRequestMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sponsorAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_SponsorAccount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoDestroyingRelationshipRequestMessage__storage_, sponsorAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_TargetAccount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoDestroyingRelationshipRequestMessage__storage_, targetAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_Sign,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoDestroyingRelationshipRequestMessage__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoDestroyingRelationshipRequestMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoDestroyingRelationshipRequestMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\016\000\003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoDestoryingRelationshipResponseMessage

@implementation KIMProtoDestoryingRelationshipResponseMessage

@dynamic hasSessionId, sessionId;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasResponse, response;
@dynamic hasSign, sign;

typedef struct KIMProtoDestoryingRelationshipResponseMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse response;
  NSString *sessionId;
  NSString *sponsorAccount;
  NSString *targetAccount;
  NSString *sign;
} KIMProtoDestoryingRelationshipResponseMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoDestoryingRelationshipResponseMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_SponsorAccount,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoDestoryingRelationshipResponseMessage__storage_, sponsorAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "targetAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_TargetAccount,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoDestoryingRelationshipResponseMessage__storage_, targetAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_Success,
        .core.name = "response",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_EnumDescriptor,
        .core.number = KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_Response,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoDestoryingRelationshipResponseMessage__storage_, response),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_Sign,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoDestoryingRelationshipResponseMessage__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoDestoryingRelationshipResponseMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoDestoryingRelationshipResponseMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\016\000\003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse

GPBEnumDescriptor *KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000ServerInteralError\000IllegalOperat"
        "ion\000";
    static const int32_t values[] = {
        KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_Success,
        KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_ServerInteralError,
        KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IllegalOperation,
    };
    static const char *extraTextFormatInfo = "\003\000\007\000\001\022\000\002\020\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_Success:
    case KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_ServerInteralError:
    case KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IllegalOperation:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoFriendListRequestMessage

@implementation KIMProtoFriendListRequestMessage

@dynamic hasSessionId, sessionId;
@dynamic hasCurrentVersion, currentVersion;

typedef struct KIMProtoFriendListRequestMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  uint64_t currentVersion;
} KIMProtoFriendListRequestMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFriendListRequestMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFriendListRequestMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currentVersion",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFriendListRequestMessage_FieldNumber_CurrentVersion,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFriendListRequestMessage__storage_, currentVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFriendListRequestMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFriendListRequestMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFriendListItem

@implementation KIMProtoFriendListItem

@dynamic hasFriendAccount, friendAccount;

typedef struct KIMProtoFriendListItem__storage_ {
  uint32_t _has_storage_[1];
  NSString *friendAccount;
} KIMProtoFriendListItem__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "friendAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFriendListItem_FieldNumber_FriendAccount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFriendListItem__storage_, friendAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFriendListItem class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFriendListItem__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFriendListResponseMessage

@implementation KIMProtoFriendListResponseMessage

@dynamic hasSessionId, sessionId;
@dynamic friendArray, friendArray_Count;
@dynamic hasCurrentVersion, currentVersion;

typedef struct KIMProtoFriendListResponseMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSMutableArray *friendArray;
  uint64_t currentVersion;
} KIMProtoFriendListResponseMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFriendListResponseMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFriendListResponseMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "friendArray",
        .dataTypeSpecific.className = GPBStringifySymbol(KIMProtoFriendListItem),
        .number = KIMProtoFriendListResponseMessage_FieldNumber_FriendArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KIMProtoFriendListResponseMessage__storage_, friendArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "currentVersion",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFriendListResponseMessage_FieldNumber_CurrentVersion,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFriendListResponseMessage__storage_, currentVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFriendListResponseMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFriendListResponseMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\003\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoOnlineStateMessage

@implementation KIMProtoOnlineStateMessage

@dynamic hasSessionId, sessionId;
@dynamic hasUserAccount, userAccount;
@dynamic hasUserState, userState;

typedef struct KIMProtoOnlineStateMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoOnlineStateMessage_OnlineState userState;
  NSString *sessionId;
  NSString *userAccount;
} KIMProtoOnlineStateMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoOnlineStateMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoOnlineStateMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoOnlineStateMessage_FieldNumber_UserAccount,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoOnlineStateMessage__storage_, userAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoOnlineStateMessage_OnlineState_Online,
        .core.name = "userState",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoOnlineStateMessage_OnlineState_EnumDescriptor,
        .core.number = KIMProtoOnlineStateMessage_FieldNumber_UserState,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoOnlineStateMessage__storage_, userState),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoOnlineStateMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoOnlineStateMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\013\000\003\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoOnlineStateMessage_OnlineState

GPBEnumDescriptor *KIMProtoOnlineStateMessage_OnlineState_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Online\000Offline\000Invisible\000";
    static const int32_t values[] = {
        KIMProtoOnlineStateMessage_OnlineState_Online,
        KIMProtoOnlineStateMessage_OnlineState_Offline,
        KIMProtoOnlineStateMessage_OnlineState_Invisible,
    };
    static const char *extraTextFormatInfo = "\003\000\006\000\001\007\000\002\t\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoOnlineStateMessage_OnlineState)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoOnlineStateMessage_OnlineState_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoOnlineStateMessage_OnlineState_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoOnlineStateMessage_OnlineState_Online:
    case KIMProtoOnlineStateMessage_OnlineState_Offline:
    case KIMProtoOnlineStateMessage_OnlineState_Invisible:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoPullFriendOnlineStateMessage

@implementation KIMProtoPullFriendOnlineStateMessage

@dynamic hasSessionId, sessionId;

typedef struct KIMProtoPullFriendOnlineStateMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
} KIMProtoPullFriendOnlineStateMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullFriendOnlineStateMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoPullFriendOnlineStateMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoPullFriendOnlineStateMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoPullFriendOnlineStateMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoChatMessage

@implementation KIMProtoChatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasSenderAccount, senderAccount;
@dynamic hasReceiverAccount, receiverAccount;
@dynamic hasContent, content;
@dynamic hasTimestamp, timestamp;
@dynamic hasMessageId, messageId;
@dynamic hasSign, sign;

typedef struct KIMProtoChatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *senderAccount;
  NSString *receiverAccount;
  NSString *content;
  NSString *timestamp;
  NSString *sign;
  uint64_t messageId;
} KIMProtoChatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "senderAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_SenderAccount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, senderAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "receiverAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_ReceiverAccount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, receiverAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, content),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_Timestamp,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "messageId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_MessageId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, messageId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatMessage_FieldNumber_Sign,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KIMProtoChatMessage__storage_, sign),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoChatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\002\r\000\003\017\000\006\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoVideoChatRequestMessage

@implementation KIMProtoVideoChatRequestMessage

@dynamic hasSessionId, sessionId;
@dynamic hasChatType, chatType;
@dynamic hasOfferId, offerId;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasSponsorSessionId, sponsorSessionId;
@dynamic hasTimestamp, timestamp;
@dynamic hasSign, sign;

typedef struct KIMProtoVideoChatRequestMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoVideoChatRequestMessage_ChatType chatType;
  NSString *sessionId;
  NSString *sponsorAccount;
  NSString *targetAccount;
  NSString *sponsorSessionId;
  NSString *timestamp;
  NSString *sign;
  uint64_t offerId;
} KIMProtoVideoChatRequestMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoVideoChatRequestMessage_ChatType_Voice,
        .core.name = "chatType",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoVideoChatRequestMessage_ChatType_EnumDescriptor,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_ChatType,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, chatType),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "offerId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_OfferId,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, offerId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeUInt64,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_SponsorAccount,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, sponsorAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "targetAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_TargetAccount,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, targetAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorSessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_SponsorSessionId,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, sponsorSessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "timestamp",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_Timestamp,
        .core.hasIndex = 6,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, timestamp),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatRequestMessage_FieldNumber_Sign,
        .core.hasIndex = 7,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatRequestMessage__storage_, sign),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatRequestMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoVideoChatRequestMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\010A\000\002\010\000\003\006A\000\004\016\000\005\r\000\006\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoVideoChatRequestMessage_ChatType

GPBEnumDescriptor *KIMProtoVideoChatRequestMessage_ChatType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Voice\000Video\000";
    static const int32_t values[] = {
        KIMProtoVideoChatRequestMessage_ChatType_Voice,
        KIMProtoVideoChatRequestMessage_ChatType_Video,
    };
    static const char *extraTextFormatInfo = "\002\000\005\000\001\005\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoVideoChatRequestMessage_ChatType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoVideoChatRequestMessage_ChatType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoVideoChatRequestMessage_ChatType_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoVideoChatRequestMessage_ChatType_Voice:
    case KIMProtoVideoChatRequestMessage_ChatType_Video:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoVideoChatRequestCancelMessage

@implementation KIMProtoVideoChatRequestCancelMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;

typedef struct KIMProtoVideoChatRequestCancelMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  uint64_t offerId;
} KIMProtoVideoChatRequestCancelMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatRequestCancelMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatRequestCancelMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "offerId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatRequestCancelMessage_FieldNumber_OfferId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatRequestCancelMessage__storage_, offerId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatRequestCancelMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoVideoChatRequestCancelMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\006A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoVideoChatReplyMessage

@implementation KIMProtoVideoChatReplyMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;
@dynamic hasSponsorAccount, sponsorAccount;
@dynamic hasTargetAccount, targetAccount;
@dynamic hasSponsorSessionId, sponsorSessionId;
@dynamic hasAnswerSessionId, answerSessionId;
@dynamic hasReply, reply;
@dynamic hasTimestamp, timestamp;
@dynamic hasSign, sign;

typedef struct KIMProtoVideoChatReplyMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoVideoChatReplyMessage_VideoChatReply reply;
  NSString *sessionId;
  NSString *sponsorAccount;
  NSString *targetAccount;
  NSString *sponsorSessionId;
  NSString *answerSessionId;
  NSString *timestamp;
  NSString *sign;
  uint64_t offerId;
} KIMProtoVideoChatReplyMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "offerId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_OfferId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, offerId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeUInt64,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_SponsorAccount,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, sponsorAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "targetAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_TargetAccount,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, targetAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sponsorSessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_SponsorSessionId,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, sponsorSessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "answerSessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_AnswerSessionId,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, answerSessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyAllow,
        .core.name = "reply",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoVideoChatReplyMessage_VideoChatReply_EnumDescriptor,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_Reply,
        .core.hasIndex = 6,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, reply),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "timestamp",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_Timestamp,
        .core.hasIndex = 7,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, timestamp),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatReplyMessage_FieldNumber_Sign,
        .core.hasIndex = 8,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatReplyMessage__storage_, sign),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatReplyMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoVideoChatReplyMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\010A\000\002\006A\000\003\016\000\004\r\000\005\020\000\006\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoVideoChatReplyMessage_VideoChatReply

GPBEnumDescriptor *KIMProtoVideoChatReplyMessage_VideoChatReply_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "VideoChatReplyAllow\000VideoChatReplyReject"
        "\000VideoChatReplyNoAnswer\000";
    static const int32_t values[] = {
        KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyAllow,
        KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyReject,
        KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyNoAnswer,
    };
    static const char *extraTextFormatInfo = "\003\000\016\205\000\001\016\206\000\002\016\210\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoVideoChatReplyMessage_VideoChatReply)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoVideoChatReplyMessage_VideoChatReply_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoVideoChatReplyMessage_VideoChatReply_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyAllow:
    case KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyReject:
    case KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyNoAnswer:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoVideoChatOfferMessage

@implementation KIMProtoVideoChatOfferMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;
@dynamic hasSessionDescription, sessionDescription;

typedef struct KIMProtoVideoChatOfferMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *sessionDescription;
  uint64_t offerId;
} KIMProtoVideoChatOfferMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatOfferMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatOfferMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "offerId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatOfferMessage_FieldNumber_OfferId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatOfferMessage__storage_, offerId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sessionDescription",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatOfferMessage_FieldNumber_SessionDescription,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatOfferMessage__storage_, sessionDescription),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatOfferMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoVideoChatOfferMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\006A\000\003\022\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoVideoChatAnswerMessage

@implementation KIMProtoVideoChatAnswerMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;
@dynamic hasSessionDescription, sessionDescription;

typedef struct KIMProtoVideoChatAnswerMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *sessionDescription;
  uint64_t offerId;
} KIMProtoVideoChatAnswerMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatAnswerMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatAnswerMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "offerId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatAnswerMessage_FieldNumber_OfferId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatAnswerMessage__storage_, offerId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sessionDescription",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatAnswerMessage_FieldNumber_SessionDescription,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatAnswerMessage__storage_, sessionDescription),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatAnswerMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoVideoChatAnswerMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\006A\000\003\022\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoVideoChatNegotiationResultMessage

@implementation KIMProtoVideoChatNegotiationResultMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;
@dynamic hasResult, result;

typedef struct KIMProtoVideoChatNegotiationResultMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoVideoChatNegotiationResultMessage_NegotiationResult result;
  NSString *sessionId;
  uint64_t offerId;
} KIMProtoVideoChatNegotiationResultMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatNegotiationResultMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatNegotiationResultMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "offerId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoVideoChatNegotiationResultMessage_FieldNumber_OfferId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatNegotiationResultMessage__storage_, offerId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeUInt64,
      },
      {
        .defaultValue.valueEnum = KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultSuccess,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_EnumDescriptor,
        .core.number = KIMProtoVideoChatNegotiationResultMessage_FieldNumber_Result,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoVideoChatNegotiationResultMessage__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatNegotiationResultMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoVideoChatNegotiationResultMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\006A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoVideoChatNegotiationResultMessage_NegotiationResult

GPBEnumDescriptor *KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "NegotiationResultSuccess\000NegotiationResu"
        "ltFailed\000";
    static const int32_t values[] = {
        KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultSuccess,
        KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultFailed,
    };
    static const char *extraTextFormatInfo = "\002\000\021\207\000\001\021\206\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoVideoChatNegotiationResultMessage_NegotiationResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultSuccess:
    case KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultFailed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoVideoChatCandidateAddressMessage

@implementation KIMProtoVideoChatCandidateAddressMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;
@dynamic hasFromSessionId, fromSessionId;
@dynamic hasSdpMid, sdpMid;
@dynamic hasSdpMlineIndex, sdpMlineIndex;
@dynamic hasSdpIzedDescription, sdpIzedDescription;

typedef struct KIMProtoVideoChatCandidateAddressMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *fromSessionId;
  NSString *sdpMid;
  NSString *sdpIzedDescription;
  uint64_t offerId;
  int64_t sdpMlineIndex;
} KIMProtoVideoChatCandidateAddressMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "offerId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_OfferId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, offerId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "fromSessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_FromSessionId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, fromSessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sdpMid",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpMid,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, sdpMid),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sdpMlineIndex",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpMlineIndex,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, sdpMlineIndex),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "sdpIzedDescription",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpIzedDescription,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatCandidateAddressMessage__storage_, sdpIzedDescription),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatCandidateAddressMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoVideoChatCandidateAddressMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\001\010A\000\002\006A\000\003\r\000\004\006\000\005\004I\000\006c\244\253\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoVideoChatByeMessage

@implementation KIMProtoVideoChatByeMessage

@dynamic hasSessionId, sessionId;
@dynamic hasOfferId, offerId;

typedef struct KIMProtoVideoChatByeMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  uint64_t offerId;
} KIMProtoVideoChatByeMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatByeMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatByeMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "offerId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoVideoChatByeMessage_FieldNumber_OfferId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoVideoChatByeMessage__storage_, offerId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoVideoChatByeMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoVideoChatByeMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\006A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoNotificationMessage

@implementation KIMProtoNotificationMessage

@dynamic hasType, type;
@dynamic hasMessageId, messageId;

typedef struct KIMProtoNotificationMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoNotificationMessage_NotificationMessageType type;
  uint64_t messageId;
} KIMProtoNotificationMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = KIMProtoNotificationMessage_NotificationMessageType_SystemNotificationMessageType,
        .core.name = "type",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoNotificationMessage_NotificationMessageType_EnumDescriptor,
        .core.number = KIMProtoNotificationMessage_FieldNumber_Type,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoNotificationMessage__storage_, type),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "messageId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoNotificationMessage_FieldNumber_MessageId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoNotificationMessage__storage_, messageId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoNotificationMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoNotificationMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoNotificationMessage_NotificationMessageType

GPBEnumDescriptor *KIMProtoNotificationMessage_NotificationMessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "SystemNotificationMessageType\000";
    static const int32_t values[] = {
        KIMProtoNotificationMessage_NotificationMessageType_SystemNotificationMessageType,
    };
    static const char *extraTextFormatInfo = "\001\000\035\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoNotificationMessage_NotificationMessageType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoNotificationMessage_NotificationMessageType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoNotificationMessage_NotificationMessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoNotificationMessage_NotificationMessageType_SystemNotificationMessageType:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoPullChatMessage

@implementation KIMProtoPullChatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasMessageId, messageId;

typedef struct KIMProtoPullChatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  uint64_t messageId;
} KIMProtoPullChatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullChatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoPullChatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "messageId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullChatMessage_FieldNumber_MessageId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoPullChatMessage__storage_, messageId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoPullChatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoPullChatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchUserVCardMessage

@implementation KIMProtoFetchUserVCardMessage

@dynamic hasSessionId, sessionId;
@dynamic hasUserId, userId;
@dynamic hasCurrentVersion, currentVersion;

typedef struct KIMProtoFetchUserVCardMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *userId;
  NSString *currentVersion;
} KIMProtoFetchUserVCardMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchUserVCardMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchUserVCardMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchUserVCardMessage_FieldNumber_UserId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFetchUserVCardMessage__storage_, userId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currentVersion",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchUserVCardMessage_FieldNumber_CurrentVersion,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoFetchUserVCardMessage__storage_, currentVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchUserVCardMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchUserVCardMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\005A\000\003\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoUserVCardResponseMessage

@implementation KIMProtoUserVCardResponseMessage

@dynamic hasSessionId, sessionId;
@dynamic hasUserId, userId;
@dynamic hasNickname, nickname;
@dynamic hasGender, gender;
@dynamic hasMood, mood;
@dynamic hasAvator, avator;
@dynamic hasCurrentVersion, currentVersion;

typedef struct KIMProtoUserVCardResponseMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoUserGenderType gender;
  NSString *sessionId;
  NSString *userId;
  NSString *nickname;
  NSString *mood;
  NSData *avator;
  NSString *currentVersion;
} KIMProtoUserVCardResponseMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_UserId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, userId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "nickname",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_Nickname,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, nickname),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoUserGenderType_Male,
        .core.name = "gender",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoUserGenderType_EnumDescriptor,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_Gender,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, gender),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "mood",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_Mood,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, mood),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueData = nil,
        .core.name = "avator",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_Avator,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, avator),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeBytes,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "currentVersion",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUserVCardResponseMessage_FieldNumber_CurrentVersion,
        .core.hasIndex = 6,
        .core.offset = (uint32_t)offsetof(KIMProtoUserVCardResponseMessage__storage_, currentVersion),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoUserVCardResponseMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoUserVCardResponseMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\005A\000\007\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoUpdateUserVCardMessage

@implementation KIMProtoUpdateUserVCardMessage

@dynamic hasSessionId, sessionId;
@dynamic hasNickname, nickname;
@dynamic hasGender, gender;
@dynamic hasMood, mood;
@dynamic hasAvator, avator;

typedef struct KIMProtoUpdateUserVCardMessage__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoUserGenderType gender;
  NSString *sessionId;
  NSString *nickname;
  NSString *mood;
  NSData *avator;
} KIMProtoUpdateUserVCardMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateUserVCardMessage_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessage__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "nickname",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateUserVCardMessage_FieldNumber_Nickname,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessage__storage_, nickname),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoUserGenderType_Male,
        .core.name = "gender",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoUserGenderType_EnumDescriptor,
        .core.number = KIMProtoUpdateUserVCardMessage_FieldNumber_Gender,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessage__storage_, gender),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "mood",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateUserVCardMessage_FieldNumber_Mood,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessage__storage_, mood),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueData = nil,
        .core.name = "avator",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateUserVCardMessage_FieldNumber_Avator,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessage__storage_, avator),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoUpdateUserVCardMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoUpdateUserVCardMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoUpdateUserVCardMessageResponse

@implementation KIMProtoUpdateUserVCardMessageResponse

@dynamic hasSessionId, sessionId;
@dynamic hasState, state;

typedef struct KIMProtoUpdateUserVCardMessageResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType state;
  NSString *sessionId;
} KIMProtoUpdateUserVCardMessageResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateUserVCardMessageResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessageResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Success,
        .core.name = "state",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_EnumDescriptor,
        .core.number = KIMProtoUpdateUserVCardMessageResponse_FieldNumber_State,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateUserVCardMessageResponse__storage_, state),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoUpdateUserVCardMessageResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoUpdateUserVCardMessageResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType

GPBEnumDescriptor *KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failure\000";
    static const int32_t values[] = {
        KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Success,
        KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Failure,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\007\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Success:
    case KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Failure:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoChatGroupCreateRequest

@implementation KIMProtoChatGroupCreateRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupName, groupName;
@dynamic hasGroupDescrption, groupDescrption;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupCreateRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupName;
  NSString *groupDescrption;
  NSString *sign;
} KIMProtoChatGroupCreateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupCreateRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupCreateRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupName",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupCreateRequest_FieldNumber_GroupName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupCreateRequest__storage_, groupName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupDescrption",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupCreateRequest_FieldNumber_GroupDescrption,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupCreateRequest__storage_, groupDescrption),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupCreateRequest_FieldNumber_Sign,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupCreateRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupCreateRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoChatGroupCreateRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\t\000\003\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoChatGroupCreateResponse

@implementation KIMProtoChatGroupCreateResponse

@dynamic hasSessionId, sessionId;
@dynamic hasResult, result;
@dynamic hasGroupId, groupId;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupCreateResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSString *sign;
} KIMProtoChatGroupCreateResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupCreateResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupCreateResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_EnumDescriptor,
        .core.number = KIMProtoChatGroupCreateResponse_FieldNumber_Result,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupCreateResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupCreateResponse_FieldNumber_GroupId,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupCreateResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupCreateResponse_FieldNumber_Sign,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupCreateResponse__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupCreateResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoChatGroupCreateResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\003\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult

GPBEnumDescriptor *KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Success,
        KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Success:
    case KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoChatGroupDisbandRequest

@implementation KIMProtoChatGroupDisbandRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasOperatorId, operatorId;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupDisbandRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
  NSString *operatorId;
  NSString *sign;
} KIMProtoChatGroupDisbandRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupDisbandRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupDisbandRequest_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "operatorId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupDisbandRequest_FieldNumber_OperatorId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandRequest__storage_, operatorId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupDisbandRequest_FieldNumber_Sign,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupDisbandRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoChatGroupDisbandRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\007\000\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoChatGroupDisbandResponse

@implementation KIMProtoChatGroupDisbandResponse

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasOperatorId, operatorId;
@dynamic hasResult, result;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupDisbandResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSString *operatorId;
  NSString *sign;
} KIMProtoChatGroupDisbandResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupDisbandResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupDisbandResponse_FieldNumber_GroupId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "operatorId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupDisbandResponse_FieldNumber_OperatorId,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandResponse__storage_, operatorId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_EnumDescriptor,
        .core.number = KIMProtoChatGroupDisbandResponse_FieldNumber_Result,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupDisbandResponse_FieldNumber_Sign,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupDisbandResponse__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupDisbandResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoChatGroupDisbandResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\007\000\003\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult

GPBEnumDescriptor *KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Success,
        KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Success:
    case KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoChatGroupJoinRequest

@implementation KIMProtoChatGroupJoinRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasUserAccount, userAccount;
@dynamic hasOperatorId, operatorId;
@dynamic hasIntroduction, introduction;
@dynamic hasApplicantId, applicantId;
@dynamic hasSign, sign;
@dynamic hasSubmissionTime, submissionTime;

typedef struct KIMProtoChatGroupJoinRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
  NSString *userAccount;
  NSString *operatorId;
  NSString *introduction;
  NSString *sign;
  NSString *submissionTime;
  uint64_t applicantId;
} KIMProtoChatGroupJoinRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_UserAccount,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, userAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "operatorId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_OperatorId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, operatorId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "introduction",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_Introduction,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, introduction),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "applicantId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_ApplicantId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, applicantId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_Sign,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, sign),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "submissionTime",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupJoinRequest_FieldNumber_SubmissionTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupJoinRequest__storage_, submissionTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupJoinRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoChatGroupJoinRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010A\000\002\007\000\003\013\000\004\n\000\010\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoChatGroupJoinResponse

@implementation KIMProtoChatGroupJoinResponse

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasUserAccount, userAccount;
@dynamic hasResult, result;
@dynamic hasApplicantId, applicantId;
@dynamic hasOperatorId, operatorId;

typedef struct KIMProtoChatGroupJoinResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSString *userAccount;
  NSString *operatorId;
  uint64_t applicantId;
} KIMProtoChatGroupJoinResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_GroupId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_UserAccount,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, userAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Allow,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_EnumDescriptor,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_Result,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueUInt64 = 0ULL,
        .core.name = "applicantId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_ApplicantId,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, applicantId),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeUInt64,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "operatorId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupJoinResponse_FieldNumber_OperatorId,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupJoinResponse__storage_, operatorId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupJoinResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoChatGroupJoinResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\002\007\000\003\013\000\006\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult

GPBEnumDescriptor *KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Allow\000Reject\000ServerInternalError\000Infomat"
        "ionNotMatch\000AuthorizationNotMath\000";
    static const int32_t values[] = {
        KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Allow,
        KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Reject,
        KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_ServerInternalError,
        KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_InfomationNotMatch,
        KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_AuthorizationNotMath,
    };
    static const char *extraTextFormatInfo = "\005\000\005\000\001\006\000\002\023\000\003\022\000\004\024\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Allow:
    case KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Reject:
    case KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_ServerInternalError:
    case KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_InfomationNotMatch:
    case KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_AuthorizationNotMath:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoChatGroupQuitRequest

@implementation KIMProtoChatGroupQuitRequest

@dynamic hasSessionId, sessionId;
@dynamic hasUserAccount, userAccount;
@dynamic hasGroupId, groupId;
@dynamic hasOperatorId, operatorId;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupQuitRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *userAccount;
  NSString *groupId;
  NSString *operatorId;
  NSString *sign;
} KIMProtoChatGroupQuitRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupQuitRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupQuitRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupQuitRequest_FieldNumber_UserAccount,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupQuitRequest__storage_, userAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupQuitRequest_FieldNumber_GroupId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupQuitRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "operatorId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupQuitRequest_FieldNumber_OperatorId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupQuitRequest__storage_, operatorId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoChatGroupQuitRequest_FieldNumber_Sign,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoChatGroupQuitRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupQuitRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoChatGroupQuitRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\002\013\000\003\007\000\004\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoChatGroupQuitResponse

@implementation KIMProtoChatGroupQuitResponse

@dynamic hasSessionId, sessionId;
@dynamic hasUserAccount, userAccount;
@dynamic hasGroupId, groupId;
@dynamic hasResult, result;
@dynamic hasOperatorId, operatorId;
@dynamic hasSign, sign;

typedef struct KIMProtoChatGroupQuitResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult result;
  NSString *sessionId;
  NSString *userAccount;
  NSString *groupId;
  NSString *operatorId;
  NSString *sign;
} KIMProtoChatGroupQuitResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "userAccount",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_UserAccount,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, userAccount),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_GroupId,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_EnumDescriptor,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_Result,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "operatorId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_OperatorId,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, operatorId),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoChatGroupQuitResponse_FieldNumber_Sign,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoChatGroupQuitResponse__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoChatGroupQuitResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoChatGroupQuitResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\002\013\000\003\007\000\005\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult

GPBEnumDescriptor *KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Success,
        KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Success:
    case KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoUpdateChatGroupInfoRequest

@implementation KIMProtoUpdateChatGroupInfoRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasGroupName, groupName;
@dynamic hasGroupDescrption, groupDescrption;
@dynamic hasSign, sign;

typedef struct KIMProtoUpdateChatGroupInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
  NSString *groupName;
  NSString *groupDescrption;
  NSString *sign;
} KIMProtoUpdateChatGroupInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoUpdateChatGroupInfoRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupName",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoRequest__storage_, groupName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupDescrption",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupDescrption,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoRequest__storage_, groupDescrption),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoUpdateChatGroupInfoRequest_FieldNumber_Sign,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoUpdateChatGroupInfoRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoUpdateChatGroupInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\004\001\010A\000\002\007\000\003\t\000\004\017\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoUpdateChatGroupInfoResponse

@implementation KIMProtoUpdateChatGroupInfoResponse

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasResult, result;
@dynamic hasOperator_p, operator_p;
@dynamic hasSign, sign;

typedef struct KIMProtoUpdateChatGroupInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSString *operator_p;
  NSString *sign;
} KIMProtoUpdateChatGroupInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateChatGroupInfoResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateChatGroupInfoResponse_FieldNumber_GroupId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "operator_p",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Operator_p,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoResponse__storage_, operator_p),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_EnumDescriptor,
        .core.number = KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Result,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Sign,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoUpdateChatGroupInfoResponse__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoUpdateChatGroupInfoResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoUpdateChatGroupInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult

GPBEnumDescriptor *KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000ServerInternalError\000Infom"
        "ationNotMatch\000AuthorizationNotMath\000";
    static const int32_t values[] = {
        KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Success,
        KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Failed,
        KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_ServerInternalError,
        KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_InfomationNotMatch,
        KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_AuthorizationNotMath,
    };
    static const char *extraTextFormatInfo = "\005\000\007\000\001\006\000\002\023\000\003\022\000\004\024\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Success:
    case KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Failed:
    case KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_ServerInternalError:
    case KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_InfomationNotMatch:
    case KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_AuthorizationNotMath:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoFetchChatGroupInfoRequest

@implementation KIMProtoFetchChatGroupInfoRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;

typedef struct KIMProtoFetchChatGroupInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
} KIMProtoFetchChatGroupInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupInfoRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupInfoRequest_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupInfoRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupInfoRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchChatGroupInfoResponse

@implementation KIMProtoFetchChatGroupInfoResponse

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasResult, result;
@dynamic hasGroupName, groupName;
@dynamic hasGroupDescrption, groupDescrption;
@dynamic hasGroupMaster, groupMaster;

typedef struct KIMProtoFetchChatGroupInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSString *groupName;
  NSString *groupDescrption;
  NSString *groupMaster;
} KIMProtoFetchChatGroupInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_EnumDescriptor,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_Result,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupName",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupName,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, groupName),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupDescrption",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupDescrption,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, groupDescrption),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupMaster",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupMaster,
        .core.hasIndex = 5,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupInfoResponse__storage_, groupMaster),
        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupInfoResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoFetchChatGroupInfoResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010A\000\002\007\000\004\t\000\005\017\000\006\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult

GPBEnumDescriptor *KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Success,
        KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Success:
    case KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoFetchChatGroupMemberListRequest

@implementation KIMProtoFetchChatGroupMemberListRequest

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasSign, sign;

typedef struct KIMProtoFetchChatGroupMemberListRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
  NSString *sign;
} KIMProtoFetchChatGroupMemberListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupMemberListRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupMemberListRequest_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListRequest__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupMemberListRequest_FieldNumber_Sign,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupMemberListRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupMemberListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\010A\000\002\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchChatGroupMemberListResponse

@implementation KIMProtoFetchChatGroupMemberListResponse

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasResult, result;
@dynamic groupMemberArray, groupMemberArray_Count;
@dynamic hasSign, sign;

typedef struct KIMProtoFetchChatGroupMemberListResponse__storage_ {
  uint32_t _has_storage_[1];
  KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult result;
  NSString *sessionId;
  NSString *groupId;
  NSMutableArray *groupMemberArray;
  NSString *sign;
} KIMProtoFetchChatGroupMemberListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueString = nil,
        .core.name = "sessionId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupMemberListResponse_FieldNumber_SessionId,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse__storage_, sessionId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "groupId",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupMemberListResponse_FieldNumber_GroupId,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse__storage_, groupId),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueEnum = KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Success,
        .core.name = "result",
        .core.dataTypeSpecific.enumDescFunc = KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_EnumDescriptor,
        .core.number = KIMProtoFetchChatGroupMemberListResponse_FieldNumber_Result,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse__storage_, result),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueMessage = nil,
        .core.name = "groupMemberArray",
        .core.dataTypeSpecific.className = GPBStringifySymbol(KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo),
        .core.number = KIMProtoFetchChatGroupMemberListResponse_FieldNumber_GroupMemberArray,
        .core.hasIndex = GPBNoHasBit,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse__storage_, groupMemberArray),
        .core.flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldTextFormatNameCustom),
        .core.dataType = GPBDataTypeMessage,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "sign",
        .core.dataTypeSpecific.className = NULL,
        .core.number = KIMProtoFetchChatGroupMemberListResponse_FieldNumber_Sign,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse__storage_, sign),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupMemberListResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(KIMProtoFetchChatGroupMemberListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\007\000\004\000groupMember\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult

GPBEnumDescriptor *KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Success\000Failed\000";
    static const int32_t values[] = {
        KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Success,
        KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Failed,
    };
    static const char *extraTextFormatInfo = "\002\000\007\000\001\006\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_IsValidValue(int32_t value__) {
  switch (value__) {
    case KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Success:
    case KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Failed:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo

@implementation KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo

@dynamic hasUserAccount, userAccount;
@dynamic hasGroupNickName, groupNickName;

typedef struct KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *userAccount;
  NSString *groupNickName;
} KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userAccount",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo_FieldNumber_UserAccount,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo__storage_, userAccount),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupNickName",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo_FieldNumber_GroupNickName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo__storage_, groupNickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\013\000\002\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KIMProtoFetchChatGroupMemberListResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchChatGroupListRequest

@implementation KIMProtoFetchChatGroupListRequest

@dynamic hasSessionId, sessionId;

typedef struct KIMProtoFetchChatGroupListRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
} KIMProtoFetchChatGroupListRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupListRequest_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupListRequest__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupListRequest class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupListRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchChatGroupListResponse

@implementation KIMProtoFetchChatGroupListResponse

@dynamic hasSessionId, sessionId;
@dynamic groupArray, groupArray_Count;

typedef struct KIMProtoFetchChatGroupListResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSMutableArray *groupArray;
} KIMProtoFetchChatGroupListResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupListResponse_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupListResponse__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupArray",
        .dataTypeSpecific.className = GPBStringifySymbol(KIMProtoFetchChatGroupListResponse_GroupInfo),
        .number = KIMProtoFetchChatGroupListResponse_FieldNumber_GroupArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupListResponse__storage_, groupArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupListResponse class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupListResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\001\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoFetchChatGroupListResponse_GroupInfo

@implementation KIMProtoFetchChatGroupListResponse_GroupInfo

@dynamic hasGroupId, groupId;
@dynamic hasGroupName, groupName;

typedef struct KIMProtoFetchChatGroupListResponse_GroupInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *groupId;
  NSString *groupName;
} KIMProtoFetchChatGroupListResponse_GroupInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupListResponse_GroupInfo_FieldNumber_GroupId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupListResponse_GroupInfo__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupName",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoFetchChatGroupListResponse_GroupInfo_FieldNumber_GroupName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoFetchChatGroupListResponse_GroupInfo__storage_, groupName),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoFetchChatGroupListResponse_GroupInfo class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoFetchChatGroupListResponse_GroupInfo__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\007\000\002\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupContainingMessageClassName:GPBStringifySymbol(KIMProtoFetchChatGroupListResponse)];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoGroupChatMessage

@implementation KIMProtoGroupChatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasSender, sender;
@dynamic hasGroupId, groupId;
@dynamic hasContent, content;
@dynamic hasMsgId, msgId;
@dynamic hasTimestamp, timestamp;
@dynamic hasSign, sign;

typedef struct KIMProtoGroupChatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *sender;
  NSString *groupId;
  NSString *content;
  NSString *timestamp;
  NSString *sign;
  uint64_t msgId;
} KIMProtoGroupChatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sender",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_Sender,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, sender),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_GroupId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "content",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_Content,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, content),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_MsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_Timestamp,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoGroupChatMessage_FieldNumber_Sign,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(KIMProtoGroupChatMessage__storage_, sign),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoGroupChatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoGroupChatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\003\007\000\005\005\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - KIMProtoPullGroupChatMessage

@implementation KIMProtoPullGroupChatMessage

@dynamic hasSessionId, sessionId;
@dynamic hasGroupId, groupId;
@dynamic hasMessageId, messageId;

typedef struct KIMProtoPullGroupChatMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *sessionId;
  NSString *groupId;
  uint64_t messageId;
} KIMProtoPullGroupChatMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullGroupChatMessage_FieldNumber_SessionId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(KIMProtoPullGroupChatMessage__storage_, sessionId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullGroupChatMessage_FieldNumber_GroupId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(KIMProtoPullGroupChatMessage__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "messageId",
        .dataTypeSpecific.className = NULL,
        .number = KIMProtoPullGroupChatMessage_FieldNumber_MessageId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(KIMProtoPullGroupChatMessage__storage_, messageId),
        .flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[KIMProtoPullGroupChatMessage class]
                                     rootClass:[KIMProtoKakaImmessageRoot class]
                                          file:KIMProtoKakaImmessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(KIMProtoPullGroupChatMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\010A\000\002\006A\000\003\010A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
