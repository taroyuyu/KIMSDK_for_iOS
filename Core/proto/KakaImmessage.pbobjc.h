// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KakaIMMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class KIMProtoFetchChatGroupListResponse_GroupInfo;
@class KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo;
@class KIMProtoFriendListItem;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum KIMProtoUserGenderType

typedef GPB_ENUM(KIMProtoUserGenderType) {
  /** 男 */
  KIMProtoUserGenderType_Male = 1,

  /** 女 */
  KIMProtoUserGenderType_Female = 2,

  /** 未知 */
  KIMProtoUserGenderType_Unkown = 3,
};

GPBEnumDescriptor *KIMProtoUserGenderType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoUserGenderType_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseSessionIDMessage_Status

typedef GPB_ENUM(KIMProtoResponseSessionIDMessage_Status) {
  KIMProtoResponseSessionIDMessage_Status_Success = 1,

  /** 服务器内部错误 */
  KIMProtoResponseSessionIDMessage_Status_ServerInterlnalError = 2,
};

GPBEnumDescriptor *KIMProtoResponseSessionIDMessage_Status_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseSessionIDMessage_Status_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseLoginMessage_LoginState

typedef GPB_ENUM(KIMProtoResponseLoginMessage_LoginState) {
  /** 登录成功 */
  KIMProtoResponseLoginMessage_LoginState_Success = 1,

  /** 登录失败 */
  KIMProtoResponseLoginMessage_LoginState_Failed = 2,
};

GPBEnumDescriptor *KIMProtoResponseLoginMessage_LoginState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseLoginMessage_LoginState_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseLoginMessage_FailureError

typedef GPB_ENUM(KIMProtoResponseLoginMessage_FailureError) {
  /** 帐号或密码错误 */
  KIMProtoResponseLoginMessage_FailureError_WrongAccountOrPassword = 1,

  /** 服务器内部错误 */
  KIMProtoResponseLoginMessage_FailureError_ServerInternalError = 2,
};

GPBEnumDescriptor *KIMProtoResponseLoginMessage_FailureError_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseLoginMessage_FailureError_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoRegisterMessage_UserSex

typedef GPB_ENUM(KIMProtoRegisterMessage_UserSex) {
  /** 男生 */
  KIMProtoRegisterMessage_UserSex_Male = 1,

  /** 女生 */
  KIMProtoRegisterMessage_UserSex_Female = 2,

  /** 未知 */
  KIMProtoRegisterMessage_UserSex_Unkown = 3,
};

GPBEnumDescriptor *KIMProtoRegisterMessage_UserSex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoRegisterMessage_UserSex_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseRegisterMessage_RegisterState

typedef GPB_ENUM(KIMProtoResponseRegisterMessage_RegisterState) {
  /** 登录成功 */
  KIMProtoResponseRegisterMessage_RegisterState_Success = 1,

  /** 登录失败 */
  KIMProtoResponseRegisterMessage_RegisterState_Failed = 2,
};

GPBEnumDescriptor *KIMProtoResponseRegisterMessage_RegisterState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseRegisterMessage_RegisterState_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseRegisterMessage_FailureError

typedef GPB_ENUM(KIMProtoResponseRegisterMessage_FailureError) {
  /** 帐号已经存在 */
  KIMProtoResponseRegisterMessage_FailureError_AccountAlreadyExists = 1,

  /** 服务器内部错误 */
  KIMProtoResponseRegisterMessage_FailureError_ServerInternalError = 2,
};

GPBEnumDescriptor *KIMProtoResponseRegisterMessage_FailureError_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseRegisterMessage_FailureError_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoLogoutMessage_OfflineMailState

typedef GPB_ENUM(KIMProtoLogoutMessage_OfflineMailState) {
  /** 开启 */
  KIMProtoLogoutMessage_OfflineMailState_Open = 1,

  /** 关闭 */
  KIMProtoLogoutMessage_OfflineMailState_Close = 2,
};

GPBEnumDescriptor *KIMProtoLogoutMessage_OfflineMailState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoLogoutMessage_OfflineMailState_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoResponseLogoutMessage_OfflineMailState

typedef GPB_ENUM(KIMProtoResponseLogoutMessage_OfflineMailState) {
  /** 开启 */
  KIMProtoResponseLogoutMessage_OfflineMailState_Open = 1,

  /** 关闭 */
  KIMProtoResponseLogoutMessage_OfflineMailState_Close = 2,
};

GPBEnumDescriptor *KIMProtoResponseLogoutMessage_OfflineMailState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoResponseLogoutMessage_OfflineMailState_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer

typedef GPB_ENUM(KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer) {
  /** 接受 */
  KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Accept = 1,

  /** 拒绝 */
  KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_Reject = 2,
};

GPBEnumDescriptor *KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse

typedef GPB_ENUM(KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse) {
  /** 拆除成功 */
  KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_Success = 1,

  /** 服务器内部错误 */
  KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_ServerInteralError = 2,

  /** 非法操作，对方并不是该用户的好友 */
  KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IllegalOperation = 3,
};

GPBEnumDescriptor *KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoOnlineStateMessage_OnlineState

typedef GPB_ENUM(KIMProtoOnlineStateMessage_OnlineState) {
  /** 在线 */
  KIMProtoOnlineStateMessage_OnlineState_Online = 1,

  /** 离线 */
  KIMProtoOnlineStateMessage_OnlineState_Offline = 2,

  /** 隐身 */
  KIMProtoOnlineStateMessage_OnlineState_Invisible = 3,
};

GPBEnumDescriptor *KIMProtoOnlineStateMessage_OnlineState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoOnlineStateMessage_OnlineState_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoVideoChatRequestMessage_ChatType

typedef GPB_ENUM(KIMProtoVideoChatRequestMessage_ChatType) {
  /** 语音通话 */
  KIMProtoVideoChatRequestMessage_ChatType_Voice = 1,

  /** 音频通话 */
  KIMProtoVideoChatRequestMessage_ChatType_Video = 2,
};

GPBEnumDescriptor *KIMProtoVideoChatRequestMessage_ChatType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoVideoChatRequestMessage_ChatType_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoVideoChatReplyMessage_VideoChatReply

typedef GPB_ENUM(KIMProtoVideoChatReplyMessage_VideoChatReply) {
  /** 允许 */
  KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyAllow = 1,

  /** 拒绝 */
  KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyReject = 2,

  /** 无响应 */
  KIMProtoVideoChatReplyMessage_VideoChatReply_VideoChatReplyNoAnswer = 3,
};

GPBEnumDescriptor *KIMProtoVideoChatReplyMessage_VideoChatReply_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoVideoChatReplyMessage_VideoChatReply_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoVideoChatNegotiationResultMessage_NegotiationResult

typedef GPB_ENUM(KIMProtoVideoChatNegotiationResultMessage_NegotiationResult) {
  /** 协商成功 */
  KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultSuccess = 1,

  /** 协商失败 */
  KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_NegotiationResultFailed = 2,
};

GPBEnumDescriptor *KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoVideoChatNegotiationResultMessage_NegotiationResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoNotificationMessage_NotificationMessageType

typedef GPB_ENUM(KIMProtoNotificationMessage_NotificationMessageType) {
  /** 系统通知 */
  KIMProtoNotificationMessage_NotificationMessageType_SystemNotificationMessageType = 1,
};

GPBEnumDescriptor *KIMProtoNotificationMessage_NotificationMessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoNotificationMessage_NotificationMessageType_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType

typedef GPB_ENUM(KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType) {
  /** 更新成功 */
  KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Success = 1,

  /** 更新失败 */
  KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_Failure = 2,
};

GPBEnumDescriptor *KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult

typedef GPB_ENUM(KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult) {
  /** 创建成功 */
  KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Success = 1,

  /** 创建失败 */
  KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_Failed = 2,
};

GPBEnumDescriptor *KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult

typedef GPB_ENUM(KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult) {
  /** 解散成功 */
  KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Success = 1,

  /** 解散失败 */
  KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_Failed = 2,
};

GPBEnumDescriptor *KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult

typedef GPB_ENUM(KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult) {
  /** 成功加入聊天群 */
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Allow = 1,

  /** 拒绝加入聊天群 */
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_Reject = 2,

  /** 服务器内部错误 */
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_ServerInternalError = 3,

  /** 信息不匹配 */
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_InfomationNotMatch = 4,

  /** 权限不匹配 */
  KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_AuthorizationNotMath = 5,
};

GPBEnumDescriptor *KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult

typedef GPB_ENUM(KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult) {
  /** 退出群组成功 */
  KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Success = 1,

  /** 退出群组失败 */
  KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_Failed = 2,
};

GPBEnumDescriptor *KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult

typedef GPB_ENUM(KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult) {
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Success = 1,
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_Failed = 2,

  /** 服务器内部错误 */
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_ServerInternalError = 3,

  /** 信息不匹配 */
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_InfomationNotMatch = 4,

  /** 权限不匹配 */
  KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_AuthorizationNotMath = 5,
};

GPBEnumDescriptor *KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult

typedef GPB_ENUM(KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult) {
  KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Success = 1,
  KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_Failed = 2,
};

GPBEnumDescriptor *KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult_IsValidValue(int32_t value);

#pragma mark - Enum KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult

typedef GPB_ENUM(KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult) {
  KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Success = 1,
  KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_Failed = 2,
};

GPBEnumDescriptor *KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult_IsValidValue(int32_t value);

#pragma mark - KIMProtoKakaImmessageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface KIMProtoKakaImmessageRoot : GPBRootObject
@end

#pragma mark - KIMProtoRequestSessionIDMessage

/**
 * 请求会话ID消息
 **/
@interface KIMProtoRequestSessionIDMessage : GPBMessage

@end

#pragma mark - KIMProtoResponseSessionIDMessage

typedef GPB_ENUM(KIMProtoResponseSessionIDMessage_FieldNumber) {
  KIMProtoResponseSessionIDMessage_FieldNumber_SessionId = 1,
  KIMProtoResponseSessionIDMessage_FieldNumber_Status = 2,
};

/**
 * 响应会话ID消息
 **/
@interface KIMProtoResponseSessionIDMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 状态码 */
@property(nonatomic, readwrite) KIMProtoResponseSessionIDMessage_Status status;

@property(nonatomic, readwrite) BOOL hasStatus;
@end

#pragma mark - KIMProtoLoginMessage

typedef GPB_ENUM(KIMProtoLoginMessage_FieldNumber) {
  KIMProtoLoginMessage_FieldNumber_SessionId = 1,
  KIMProtoLoginMessage_FieldNumber_UserAccount = 2,
  KIMProtoLoginMessage_FieldNumber_UserPassword = 3,
};

/**
 * 登录消息
 **/
@interface KIMProtoLoginMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 账户 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userPassword;
/** Test to see if @c userPassword has been set. */
@property(nonatomic, readwrite) BOOL hasUserPassword;

@end

#pragma mark - KIMProtoResponseLoginMessage

typedef GPB_ENUM(KIMProtoResponseLoginMessage_FieldNumber) {
  KIMProtoResponseLoginMessage_FieldNumber_SessionId = 1,
  KIMProtoResponseLoginMessage_FieldNumber_LoginState = 2,
  KIMProtoResponseLoginMessage_FieldNumber_FailureError = 3,
};

/**
 * 响应登录消息
 **/
@interface KIMProtoResponseLoginMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 登录状态 */
@property(nonatomic, readwrite) KIMProtoResponseLoginMessage_LoginState loginState;

@property(nonatomic, readwrite) BOOL hasLoginState;
/** 错误原因 */
@property(nonatomic, readwrite) KIMProtoResponseLoginMessage_FailureError failureError;

@property(nonatomic, readwrite) BOOL hasFailureError;
@end

#pragma mark - KIMProtoRegisterMessage

typedef GPB_ENUM(KIMProtoRegisterMessage_FieldNumber) {
  KIMProtoRegisterMessage_FieldNumber_UserAccount = 1,
  KIMProtoRegisterMessage_FieldNumber_UserPassword = 2,
  KIMProtoRegisterMessage_FieldNumber_UserNickName = 3,
  KIMProtoRegisterMessage_FieldNumber_Sex = 4,
};

/**
 * 注册消息
 **/
@interface KIMProtoRegisterMessage : GPBMessage

/** 账户 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 密码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userPassword;
/** Test to see if @c userPassword has been set. */
@property(nonatomic, readwrite) BOOL hasUserPassword;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userNickName;
/** Test to see if @c userNickName has been set. */
@property(nonatomic, readwrite) BOOL hasUserNickName;

/** 用户性别 */
@property(nonatomic, readwrite) KIMProtoRegisterMessage_UserSex sex;

@property(nonatomic, readwrite) BOOL hasSex;
@end

#pragma mark - KIMProtoResponseRegisterMessage

typedef GPB_ENUM(KIMProtoResponseRegisterMessage_FieldNumber) {
  KIMProtoResponseRegisterMessage_FieldNumber_RegisterState = 1,
  KIMProtoResponseRegisterMessage_FieldNumber_FailureError = 2,
};

/**
 * 响应注册消息
 **/
@interface KIMProtoResponseRegisterMessage : GPBMessage

/** 注册状态 */
@property(nonatomic, readwrite) KIMProtoResponseRegisterMessage_RegisterState registerState;

@property(nonatomic, readwrite) BOOL hasRegisterState;
/** 错误原因 */
@property(nonatomic, readwrite) KIMProtoResponseRegisterMessage_FailureError failureError;

@property(nonatomic, readwrite) BOOL hasFailureError;
@end

#pragma mark - KIMProtoHeartBeatMessage

typedef GPB_ENUM(KIMProtoHeartBeatMessage_FieldNumber) {
  KIMProtoHeartBeatMessage_FieldNumber_SessionId = 1,
  KIMProtoHeartBeatMessage_FieldNumber_Timestamp = 2,
};

/**
 * 心跳包
 **/
@interface KIMProtoHeartBeatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@end

#pragma mark - KIMProtoResponseHeartBeatMessage

typedef GPB_ENUM(KIMProtoResponseHeartBeatMessage_FieldNumber) {
  KIMProtoResponseHeartBeatMessage_FieldNumber_SessionId = 1,
  KIMProtoResponseHeartBeatMessage_FieldNumber_Timestamp = 2,
};

/**
 * 响应心跳包
 **/
@interface KIMProtoResponseHeartBeatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@end

#pragma mark - KIMProtoLogoutMessage

typedef GPB_ENUM(KIMProtoLogoutMessage_FieldNumber) {
  KIMProtoLogoutMessage_FieldNumber_SessionId = 1,
  KIMProtoLogoutMessage_FieldNumber_OfflineMaileState = 2,
};

/**
 * 离线消息
 **/
@interface KIMProtoLogoutMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 离线邮箱状态 */
@property(nonatomic, readwrite) KIMProtoLogoutMessage_OfflineMailState offlineMaileState;

@property(nonatomic, readwrite) BOOL hasOfflineMaileState;
@end

#pragma mark - KIMProtoResponseLogoutMessage

typedef GPB_ENUM(KIMProtoResponseLogoutMessage_FieldNumber) {
  KIMProtoResponseLogoutMessage_FieldNumber_SessionId = 1,
  KIMProtoResponseLogoutMessage_FieldNumber_OfflineMaileState = 2,
};

/**
 * 响应离线消息
 **/
@interface KIMProtoResponseLogoutMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 离线邮箱状态 */
@property(nonatomic, readwrite) KIMProtoResponseLogoutMessage_OfflineMailState offlineMaileState;

@property(nonatomic, readwrite) BOOL hasOfflineMaileState;
@end

#pragma mark - KIMProtoBuildingRelationshipRequestMessage

typedef GPB_ENUM(KIMProtoBuildingRelationshipRequestMessage_FieldNumber) {
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SessionId = 1,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_ApplicantId = 2,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SponsorAccount = 3,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_TargetAccount = 4,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_Introduction = 5,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_Sign = 6,
  KIMProtoBuildingRelationshipRequestMessage_FieldNumber_SubmissionTime = 7,
};

@interface KIMProtoBuildingRelationshipRequestMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 申请ID */
@property(nonatomic, readwrite) uint64_t applicantId;

@property(nonatomic, readwrite) BOOL hasApplicantId;
/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 目标用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 自我介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *introduction;
/** Test to see if @c introduction has been set. */
@property(nonatomic, readwrite) BOOL hasIntroduction;

/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

/** 提交时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *submissionTime;
/** Test to see if @c submissionTime has been set. */
@property(nonatomic, readwrite) BOOL hasSubmissionTime;

@end

#pragma mark - KIMProtoBuildingRelationshipAnswerMessage

typedef GPB_ENUM(KIMProtoBuildingRelationshipAnswerMessage_FieldNumber) {
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_SessionId = 1,
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_ApplicantId = 2,
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_TargetAccount = 3,
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_SponsorAccount = 4,
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_Answer = 5,
  KIMProtoBuildingRelationshipAnswerMessage_FieldNumber_HandleTime = 6,
};

@interface KIMProtoBuildingRelationshipAnswerMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 申请ID */
@property(nonatomic, readwrite) uint64_t applicantId;

@property(nonatomic, readwrite) BOOL hasApplicantId;
/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 回复 */
@property(nonatomic, readwrite) KIMProtoBuildingRelationshipAnswerMessage_BuildingRelationshipAnswer answer;

@property(nonatomic, readwrite) BOOL hasAnswer;
/** 处理时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *handleTime;
/** Test to see if @c handleTime has been set. */
@property(nonatomic, readwrite) BOOL hasHandleTime;

@end

#pragma mark - KIMProtoDestroyingRelationshipRequestMessage

typedef GPB_ENUM(KIMProtoDestroyingRelationshipRequestMessage_FieldNumber) {
  KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_SessionId = 1,
  KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_SponsorAccount = 2,
  KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_TargetAccount = 3,
  KIMProtoDestroyingRelationshipRequestMessage_FieldNumber_Sign = 4,
};

@interface KIMProtoDestroyingRelationshipRequestMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoDestoryingRelationshipResponseMessage

typedef GPB_ENUM(KIMProtoDestoryingRelationshipResponseMessage_FieldNumber) {
  KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_SessionId = 1,
  KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_SponsorAccount = 2,
  KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_TargetAccount = 3,
  KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_Response = 4,
  KIMProtoDestoryingRelationshipResponseMessage_FieldNumber_Sign = 5,
};

/**
 * 拆除好友关系回复消息
 **/
@interface KIMProtoDestoryingRelationshipResponseMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 响应 */
@property(nonatomic, readwrite) KIMProtoDestoryingRelationshipResponseMessage_DestoryingRelationshipResponse response;

@property(nonatomic, readwrite) BOOL hasResponse;
/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoFriendListRequestMessage

typedef GPB_ENUM(KIMProtoFriendListRequestMessage_FieldNumber) {
  KIMProtoFriendListRequestMessage_FieldNumber_SessionId = 1,
  KIMProtoFriendListRequestMessage_FieldNumber_CurrentVersion = 2,
};

/**
 * 请求好友列表消息
 **/
@interface KIMProtoFriendListRequestMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 当前使用的此用户的好友列表的版本，服务器端根据此值来判断是否返回好友列表信息，0表示请求最新的好友饿列表 */
@property(nonatomic, readwrite) uint64_t currentVersion;

@property(nonatomic, readwrite) BOOL hasCurrentVersion;
@end

#pragma mark - KIMProtoFriendListItem

typedef GPB_ENUM(KIMProtoFriendListItem_FieldNumber) {
  KIMProtoFriendListItem_FieldNumber_FriendAccount = 1,
};

@interface KIMProtoFriendListItem : GPBMessage

/** 好友ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *friendAccount;
/** Test to see if @c friendAccount has been set. */
@property(nonatomic, readwrite) BOOL hasFriendAccount;

@end

#pragma mark - KIMProtoFriendListResponseMessage

typedef GPB_ENUM(KIMProtoFriendListResponseMessage_FieldNumber) {
  KIMProtoFriendListResponseMessage_FieldNumber_SessionId = 1,
  KIMProtoFriendListResponseMessage_FieldNumber_FriendArray = 2,
  KIMProtoFriendListResponseMessage_FieldNumber_CurrentVersion = 3,
};

/**
 * 响应好友列表请求消息
 **/
@interface KIMProtoFriendListResponseMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 好友列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KIMProtoFriendListItem*> *friendArray;
/** The number of items in @c friendArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger friendArray_Count;

/** 服务器端维护的此用户的好友列表的当前版本 */
@property(nonatomic, readwrite) uint64_t currentVersion;

@property(nonatomic, readwrite) BOOL hasCurrentVersion;
@end

#pragma mark - KIMProtoOnlineStateMessage

typedef GPB_ENUM(KIMProtoOnlineStateMessage_FieldNumber) {
  KIMProtoOnlineStateMessage_FieldNumber_SessionId = 1,
  KIMProtoOnlineStateMessage_FieldNumber_UserAccount = 2,
  KIMProtoOnlineStateMessage_FieldNumber_UserState = 3,
};

/**
 * 在线消息
 **/
@interface KIMProtoOnlineStateMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 用户状态 */
@property(nonatomic, readwrite) KIMProtoOnlineStateMessage_OnlineState userState;

@property(nonatomic, readwrite) BOOL hasUserState;
@end

#pragma mark - KIMProtoPullFriendOnlineStateMessage

typedef GPB_ENUM(KIMProtoPullFriendOnlineStateMessage_FieldNumber) {
  KIMProtoPullFriendOnlineStateMessage_FieldNumber_SessionId = 1,
};

/**
 * 拉取好友在线消息
 **/
@interface KIMProtoPullFriendOnlineStateMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@end

#pragma mark - KIMProtoChatMessage

typedef GPB_ENUM(KIMProtoChatMessage_FieldNumber) {
  KIMProtoChatMessage_FieldNumber_SessionId = 1,
  KIMProtoChatMessage_FieldNumber_SenderAccount = 2,
  KIMProtoChatMessage_FieldNumber_ReceiverAccount = 3,
  KIMProtoChatMessage_FieldNumber_Content = 4,
  KIMProtoChatMessage_FieldNumber_Timestamp = 5,
  KIMProtoChatMessage_FieldNumber_MessageId = 6,
  KIMProtoChatMessage_FieldNumber_Sign = 7,
};

/**
 * 聊天消息
 **/
@interface KIMProtoChatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 发送者 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senderAccount;
/** Test to see if @c senderAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSenderAccount;

/** 接受者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiverAccount;
/** Test to see if @c receiverAccount has been set. */
@property(nonatomic, readwrite) BOOL hasReceiverAccount;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** 消息ID */
@property(nonatomic, readwrite) uint64_t messageId;

@property(nonatomic, readwrite) BOOL hasMessageId;
/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoVideoChatRequestMessage

typedef GPB_ENUM(KIMProtoVideoChatRequestMessage_FieldNumber) {
  KIMProtoVideoChatRequestMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatRequestMessage_FieldNumber_ChatType = 2,
  KIMProtoVideoChatRequestMessage_FieldNumber_OfferId = 3,
  KIMProtoVideoChatRequestMessage_FieldNumber_SponsorAccount = 4,
  KIMProtoVideoChatRequestMessage_FieldNumber_TargetAccount = 5,
  KIMProtoVideoChatRequestMessage_FieldNumber_SponsorSessionId = 6,
  KIMProtoVideoChatRequestMessage_FieldNumber_Timestamp = 7,
  KIMProtoVideoChatRequestMessage_FieldNumber_Sign = 8,
};

/**
 * 视频聊天请求消息
 **/
@interface KIMProtoVideoChatRequestMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 通话类型 */
@property(nonatomic, readwrite) KIMProtoVideoChatRequestMessage_ChatType chatType;

@property(nonatomic, readwrite) BOOL hasChatType;
/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 目标用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 发起者的im会话Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorSessionId;
/** Test to see if @c sponsorSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorSessionId;

/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoVideoChatRequestCancelMessage

typedef GPB_ENUM(KIMProtoVideoChatRequestCancelMessage_FieldNumber) {
  KIMProtoVideoChatRequestCancelMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatRequestCancelMessage_FieldNumber_OfferId = 2,
};

/**
 * 视频聊天请求取消消息
 **/
@interface KIMProtoVideoChatRequestCancelMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
@end

#pragma mark - KIMProtoVideoChatReplyMessage

typedef GPB_ENUM(KIMProtoVideoChatReplyMessage_FieldNumber) {
  KIMProtoVideoChatReplyMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatReplyMessage_FieldNumber_OfferId = 2,
  KIMProtoVideoChatReplyMessage_FieldNumber_SponsorAccount = 3,
  KIMProtoVideoChatReplyMessage_FieldNumber_TargetAccount = 4,
  KIMProtoVideoChatReplyMessage_FieldNumber_SponsorSessionId = 5,
  KIMProtoVideoChatReplyMessage_FieldNumber_AnswerSessionId = 6,
  KIMProtoVideoChatReplyMessage_FieldNumber_Reply = 7,
  KIMProtoVideoChatReplyMessage_FieldNumber_Timestamp = 8,
  KIMProtoVideoChatReplyMessage_FieldNumber_Sign = 9,
};

/**
 * 视频聊天请求答复消息
 **/
@interface KIMProtoVideoChatReplyMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
/** 发起者ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorAccount;
/** Test to see if @c sponsorAccount has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorAccount;

/** 目标用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetAccount;
/** Test to see if @c targetAccount has been set. */
@property(nonatomic, readwrite) BOOL hasTargetAccount;

/** 发起者的im会话Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sponsorSessionId;
/** Test to see if @c sponsorSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSponsorSessionId;

/** 接听者所在的im会话Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *answerSessionId;
/** Test to see if @c answerSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasAnswerSessionId;

/** 答复 */
@property(nonatomic, readwrite) KIMProtoVideoChatReplyMessage_VideoChatReply reply;

@property(nonatomic, readwrite) BOOL hasReply;
/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoVideoChatOfferMessage

typedef GPB_ENUM(KIMProtoVideoChatOfferMessage_FieldNumber) {
  KIMProtoVideoChatOfferMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatOfferMessage_FieldNumber_OfferId = 2,
  KIMProtoVideoChatOfferMessage_FieldNumber_SessionDescription = 3,
};

/**
 * 视频聊天提议消息
 **/
@interface KIMProtoVideoChatOfferMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
/** 会话描述符信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionDescription;
/** Test to see if @c sessionDescription has been set. */
@property(nonatomic, readwrite) BOOL hasSessionDescription;

@end

#pragma mark - KIMProtoVideoChatAnswerMessage

typedef GPB_ENUM(KIMProtoVideoChatAnswerMessage_FieldNumber) {
  KIMProtoVideoChatAnswerMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatAnswerMessage_FieldNumber_OfferId = 2,
  KIMProtoVideoChatAnswerMessage_FieldNumber_SessionDescription = 3,
};

/**
 * 视频聊天应答消息
 **/
@interface KIMProtoVideoChatAnswerMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
/** 会话描述符信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionDescription;
/** Test to see if @c sessionDescription has been set. */
@property(nonatomic, readwrite) BOOL hasSessionDescription;

@end

#pragma mark - KIMProtoVideoChatNegotiationResultMessage

typedef GPB_ENUM(KIMProtoVideoChatNegotiationResultMessage_FieldNumber) {
  KIMProtoVideoChatNegotiationResultMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatNegotiationResultMessage_FieldNumber_OfferId = 2,
  KIMProtoVideoChatNegotiationResultMessage_FieldNumber_Result = 3,
};

/**
 * 协商响应消息
 **/
@interface KIMProtoVideoChatNegotiationResultMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
@property(nonatomic, readwrite) KIMProtoVideoChatNegotiationResultMessage_NegotiationResult result;

@property(nonatomic, readwrite) BOOL hasResult;
@end

#pragma mark - KIMProtoVideoChatCandidateAddressMessage

typedef GPB_ENUM(KIMProtoVideoChatCandidateAddressMessage_FieldNumber) {
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_OfferId = 2,
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_FromSessionId = 3,
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpMid = 4,
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpMlineIndex = 5,
  KIMProtoVideoChatCandidateAddressMessage_FieldNumber_SdpIzedDescription = 6,
};

/**
 * 候选项消息
 **/
@interface KIMProtoVideoChatCandidateAddressMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fromSessionId;
/** Test to see if @c fromSessionId has been set. */
@property(nonatomic, readwrite) BOOL hasFromSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sdpMid;
/** Test to see if @c sdpMid has been set. */
@property(nonatomic, readwrite) BOOL hasSdpMid;

@property(nonatomic, readwrite) int64_t sdpMlineIndex;

@property(nonatomic, readwrite) BOOL hasSdpMlineIndex;
/** sdp格式的描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sdpIzedDescription;
/** Test to see if @c sdpIzedDescription has been set. */
@property(nonatomic, readwrite) BOOL hasSdpIzedDescription;

@end

#pragma mark - KIMProtoVideoChatByeMessage

typedef GPB_ENUM(KIMProtoVideoChatByeMessage_FieldNumber) {
  KIMProtoVideoChatByeMessage_FieldNumber_SessionId = 1,
  KIMProtoVideoChatByeMessage_FieldNumber_OfferId = 2,
};

/**
 * 视频聊天结束消息
 **/
@interface KIMProtoVideoChatByeMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 提议ID */
@property(nonatomic, readwrite) uint64_t offerId;

@property(nonatomic, readwrite) BOOL hasOfferId;
@end

#pragma mark - KIMProtoNotificationMessage

typedef GPB_ENUM(KIMProtoNotificationMessage_FieldNumber) {
  KIMProtoNotificationMessage_FieldNumber_Type = 1,
  KIMProtoNotificationMessage_FieldNumber_MessageId = 2,
};

@interface KIMProtoNotificationMessage : GPBMessage

/** 通知类型 */
@property(nonatomic, readwrite) KIMProtoNotificationMessage_NotificationMessageType type;

@property(nonatomic, readwrite) BOOL hasType;
/** 消息ID */
@property(nonatomic, readwrite) uint64_t messageId;

@property(nonatomic, readwrite) BOOL hasMessageId;
@end

#pragma mark - KIMProtoPullChatMessage

typedef GPB_ENUM(KIMProtoPullChatMessage_FieldNumber) {
  KIMProtoPullChatMessage_FieldNumber_SessionId = 1,
  KIMProtoPullChatMessage_FieldNumber_MessageId = 2,
};

@interface KIMProtoPullChatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 拉取在messageID之后的消息 */
@property(nonatomic, readwrite) uint64_t messageId;

@property(nonatomic, readwrite) BOOL hasMessageId;
@end

#pragma mark - KIMProtoFetchUserVCardMessage

typedef GPB_ENUM(KIMProtoFetchUserVCardMessage_FieldNumber) {
  KIMProtoFetchUserVCardMessage_FieldNumber_SessionId = 1,
  KIMProtoFetchUserVCardMessage_FieldNumber_UserId = 2,
  KIMProtoFetchUserVCardMessage_FieldNumber_CurrentVersion = 3,
};

@interface KIMProtoFetchUserVCardMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

/** 客户端所持有的此用户的电子名片的版本，0表示希望获取最新版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currentVersion;
/** Test to see if @c currentVersion has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentVersion;

@end

#pragma mark - KIMProtoUserVCardResponseMessage

typedef GPB_ENUM(KIMProtoUserVCardResponseMessage_FieldNumber) {
  KIMProtoUserVCardResponseMessage_FieldNumber_SessionId = 1,
  KIMProtoUserVCardResponseMessage_FieldNumber_UserId = 2,
  KIMProtoUserVCardResponseMessage_FieldNumber_Nickname = 3,
  KIMProtoUserVCardResponseMessage_FieldNumber_Gender = 4,
  KIMProtoUserVCardResponseMessage_FieldNumber_Mood = 5,
  KIMProtoUserVCardResponseMessage_FieldNumber_Avator = 6,
  KIMProtoUserVCardResponseMessage_FieldNumber_CurrentVersion = 7,
};

@interface KIMProtoUserVCardResponseMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

/** 性别 */
@property(nonatomic, readwrite) KIMProtoUserGenderType gender;

@property(nonatomic, readwrite) BOOL hasGender;
/** 心情 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mood;
/** Test to see if @c mood has been set. */
@property(nonatomic, readwrite) BOOL hasMood;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *avator;
/** Test to see if @c avator has been set. */
@property(nonatomic, readwrite) BOOL hasAvator;

/** 服务器所持有的此用户的电子名片的版本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currentVersion;
/** Test to see if @c currentVersion has been set. */
@property(nonatomic, readwrite) BOOL hasCurrentVersion;

@end

#pragma mark - KIMProtoUpdateUserVCardMessage

typedef GPB_ENUM(KIMProtoUpdateUserVCardMessage_FieldNumber) {
  KIMProtoUpdateUserVCardMessage_FieldNumber_SessionId = 1,
  KIMProtoUpdateUserVCardMessage_FieldNumber_Nickname = 2,
  KIMProtoUpdateUserVCardMessage_FieldNumber_Gender = 3,
  KIMProtoUpdateUserVCardMessage_FieldNumber_Mood = 4,
  KIMProtoUpdateUserVCardMessage_FieldNumber_Avator = 5,
};

@interface KIMProtoUpdateUserVCardMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

/** 性别 */
@property(nonatomic, readwrite) KIMProtoUserGenderType gender;

@property(nonatomic, readwrite) BOOL hasGender;
/** 心情 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mood;
/** Test to see if @c mood has been set. */
@property(nonatomic, readwrite) BOOL hasMood;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *avator;
/** Test to see if @c avator has been set. */
@property(nonatomic, readwrite) BOOL hasAvator;

@end

#pragma mark - KIMProtoUpdateUserVCardMessageResponse

typedef GPB_ENUM(KIMProtoUpdateUserVCardMessageResponse_FieldNumber) {
  KIMProtoUpdateUserVCardMessageResponse_FieldNumber_SessionId = 1,
  KIMProtoUpdateUserVCardMessageResponse_FieldNumber_State = 2,
};

@interface KIMProtoUpdateUserVCardMessageResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 更新操作执行结果 */
@property(nonatomic, readwrite) KIMProtoUpdateUserVCardMessageResponse_UpdateUserVCardStateType state;

@property(nonatomic, readwrite) BOOL hasState;
@end

#pragma mark - KIMProtoChatGroupCreateRequest

typedef GPB_ENUM(KIMProtoChatGroupCreateRequest_FieldNumber) {
  KIMProtoChatGroupCreateRequest_FieldNumber_SessionId = 1,
  KIMProtoChatGroupCreateRequest_FieldNumber_GroupName = 2,
  KIMProtoChatGroupCreateRequest_FieldNumber_GroupDescrption = 3,
  KIMProtoChatGroupCreateRequest_FieldNumber_Sign = 4,
};

@interface KIMProtoChatGroupCreateRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;
/** Test to see if @c groupName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupName;

/** 群组描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupDescrption;
/** Test to see if @c groupDescrption has been set. */
@property(nonatomic, readwrite) BOOL hasGroupDescrption;

/** 请求签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoChatGroupCreateResponse

typedef GPB_ENUM(KIMProtoChatGroupCreateResponse_FieldNumber) {
  KIMProtoChatGroupCreateResponse_FieldNumber_SessionId = 1,
  KIMProtoChatGroupCreateResponse_FieldNumber_Result = 2,
  KIMProtoChatGroupCreateResponse_FieldNumber_GroupId = 3,
  KIMProtoChatGroupCreateResponse_FieldNumber_Sign = 4,
};

@interface KIMProtoChatGroupCreateResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 响应结果 */
@property(nonatomic, readwrite) KIMProtoChatGroupCreateResponse_ChatGroupCreateResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 请求签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoChatGroupDisbandRequest

typedef GPB_ENUM(KIMProtoChatGroupDisbandRequest_FieldNumber) {
  KIMProtoChatGroupDisbandRequest_FieldNumber_SessionId = 1,
  KIMProtoChatGroupDisbandRequest_FieldNumber_GroupId = 2,
  KIMProtoChatGroupDisbandRequest_FieldNumber_OperatorId = 3,
  KIMProtoChatGroupDisbandRequest_FieldNumber_Sign = 4,
};

@interface KIMProtoChatGroupDisbandRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

/** 请求签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoChatGroupDisbandResponse

typedef GPB_ENUM(KIMProtoChatGroupDisbandResponse_FieldNumber) {
  KIMProtoChatGroupDisbandResponse_FieldNumber_SessionId = 1,
  KIMProtoChatGroupDisbandResponse_FieldNumber_GroupId = 2,
  KIMProtoChatGroupDisbandResponse_FieldNumber_OperatorId = 3,
  KIMProtoChatGroupDisbandResponse_FieldNumber_Result = 4,
  KIMProtoChatGroupDisbandResponse_FieldNumber_Sign = 5,
};

@interface KIMProtoChatGroupDisbandResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

/** 响应结果 */
@property(nonatomic, readwrite) KIMProtoChatGroupDisbandResponse_ChatGroupDisbandResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
/** 请求签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoChatGroupJoinRequest

typedef GPB_ENUM(KIMProtoChatGroupJoinRequest_FieldNumber) {
  KIMProtoChatGroupJoinRequest_FieldNumber_SessionId = 1,
  KIMProtoChatGroupJoinRequest_FieldNumber_GroupId = 2,
  KIMProtoChatGroupJoinRequest_FieldNumber_UserAccount = 3,
  KIMProtoChatGroupJoinRequest_FieldNumber_OperatorId = 4,
  KIMProtoChatGroupJoinRequest_FieldNumber_Introduction = 5,
  KIMProtoChatGroupJoinRequest_FieldNumber_ApplicantId = 6,
  KIMProtoChatGroupJoinRequest_FieldNumber_Sign = 7,
  KIMProtoChatGroupJoinRequest_FieldNumber_SubmissionTime = 8,
};

/**
 * 加入聊天群
 **/
@interface KIMProtoChatGroupJoinRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

/** 自我介绍 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *introduction;
/** Test to see if @c introduction has been set. */
@property(nonatomic, readwrite) BOOL hasIntroduction;

/** 申请ID */
@property(nonatomic, readwrite) uint64_t applicantId;

@property(nonatomic, readwrite) BOOL hasApplicantId;
/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

/** 提交时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *submissionTime;
/** Test to see if @c submissionTime has been set. */
@property(nonatomic, readwrite) BOOL hasSubmissionTime;

@end

#pragma mark - KIMProtoChatGroupJoinResponse

typedef GPB_ENUM(KIMProtoChatGroupJoinResponse_FieldNumber) {
  KIMProtoChatGroupJoinResponse_FieldNumber_SessionId = 1,
  KIMProtoChatGroupJoinResponse_FieldNumber_GroupId = 2,
  KIMProtoChatGroupJoinResponse_FieldNumber_UserAccount = 3,
  KIMProtoChatGroupJoinResponse_FieldNumber_Result = 4,
  KIMProtoChatGroupJoinResponse_FieldNumber_ApplicantId = 5,
  KIMProtoChatGroupJoinResponse_FieldNumber_OperatorId = 6,
};

@interface KIMProtoChatGroupJoinResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 响应结果 */
@property(nonatomic, readwrite) KIMProtoChatGroupJoinResponse_ChatGroupJoinResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
/** 申请ID */
@property(nonatomic, readwrite) uint64_t applicantId;

@property(nonatomic, readwrite) BOOL hasApplicantId;
/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

@end

#pragma mark - KIMProtoChatGroupQuitRequest

typedef GPB_ENUM(KIMProtoChatGroupQuitRequest_FieldNumber) {
  KIMProtoChatGroupQuitRequest_FieldNumber_SessionId = 1,
  KIMProtoChatGroupQuitRequest_FieldNumber_UserAccount = 2,
  KIMProtoChatGroupQuitRequest_FieldNumber_GroupId = 3,
  KIMProtoChatGroupQuitRequest_FieldNumber_OperatorId = 4,
  KIMProtoChatGroupQuitRequest_FieldNumber_Sign = 5,
};

@interface KIMProtoChatGroupQuitRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 待退出的用户 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 群组id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoChatGroupQuitResponse

typedef GPB_ENUM(KIMProtoChatGroupQuitResponse_FieldNumber) {
  KIMProtoChatGroupQuitResponse_FieldNumber_SessionId = 1,
  KIMProtoChatGroupQuitResponse_FieldNumber_UserAccount = 2,
  KIMProtoChatGroupQuitResponse_FieldNumber_GroupId = 3,
  KIMProtoChatGroupQuitResponse_FieldNumber_Result = 4,
  KIMProtoChatGroupQuitResponse_FieldNumber_OperatorId = 5,
  KIMProtoChatGroupQuitResponse_FieldNumber_Sign = 6,
};

@interface KIMProtoChatGroupQuitResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 用户Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

/** 群组id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 退出操作处理结果 */
@property(nonatomic, readwrite) KIMProtoChatGroupQuitResponse_ChatGroupQuitResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
/** 操作员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatorId;
/** Test to see if @c operatorId has been set. */
@property(nonatomic, readwrite) BOOL hasOperatorId;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoUpdateChatGroupInfoRequest

typedef GPB_ENUM(KIMProtoUpdateChatGroupInfoRequest_FieldNumber) {
  KIMProtoUpdateChatGroupInfoRequest_FieldNumber_SessionId = 1,
  KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupId = 2,
  KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupName = 3,
  KIMProtoUpdateChatGroupInfoRequest_FieldNumber_GroupDescrption = 4,
  KIMProtoUpdateChatGroupInfoRequest_FieldNumber_Sign = 5,
};

@interface KIMProtoUpdateChatGroupInfoRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;
/** Test to see if @c groupName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupDescrption;
/** Test to see if @c groupDescrption has been set. */
@property(nonatomic, readwrite) BOOL hasGroupDescrption;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoUpdateChatGroupInfoResponse

typedef GPB_ENUM(KIMProtoUpdateChatGroupInfoResponse_FieldNumber) {
  KIMProtoUpdateChatGroupInfoResponse_FieldNumber_SessionId = 1,
  KIMProtoUpdateChatGroupInfoResponse_FieldNumber_GroupId = 2,
  KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Operator_p = 3,
  KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Result = 4,
  KIMProtoUpdateChatGroupInfoResponse_FieldNumber_Sign = 5,
};

@interface KIMProtoUpdateChatGroupInfoResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite) KIMProtoUpdateChatGroupInfoResponse_UpdateChatGroupInfoResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
@property(nonatomic, readwrite, copy, null_resettable) NSString *operator_p;
/** Test to see if @c operator_p has been set. */
@property(nonatomic, readwrite) BOOL hasOperator_p;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoFetchChatGroupInfoRequest

typedef GPB_ENUM(KIMProtoFetchChatGroupInfoRequest_FieldNumber) {
  KIMProtoFetchChatGroupInfoRequest_FieldNumber_SessionId = 1,
  KIMProtoFetchChatGroupInfoRequest_FieldNumber_GroupId = 2,
};

@interface KIMProtoFetchChatGroupInfoRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群组Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@end

#pragma mark - KIMProtoFetchChatGroupInfoResponse

typedef GPB_ENUM(KIMProtoFetchChatGroupInfoResponse_FieldNumber) {
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_SessionId = 1,
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupId = 2,
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_Result = 3,
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupName = 4,
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupDescrption = 5,
  KIMProtoFetchChatGroupInfoResponse_FieldNumber_GroupMaster = 6,
};

@interface KIMProtoFetchChatGroupInfoResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite) KIMProtoFetchChatGroupInfoResponse_FetchChatGroupInfoResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;
/** Test to see if @c groupName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupDescrption;
/** Test to see if @c groupDescrption has been set. */
@property(nonatomic, readwrite) BOOL hasGroupDescrption;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupMaster;
/** Test to see if @c groupMaster has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMaster;

@end

#pragma mark - KIMProtoFetchChatGroupMemberListRequest

typedef GPB_ENUM(KIMProtoFetchChatGroupMemberListRequest_FieldNumber) {
  KIMProtoFetchChatGroupMemberListRequest_FieldNumber_SessionId = 1,
  KIMProtoFetchChatGroupMemberListRequest_FieldNumber_GroupId = 2,
  KIMProtoFetchChatGroupMemberListRequest_FieldNumber_Sign = 3,
};

@interface KIMProtoFetchChatGroupMemberListRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群Id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoFetchChatGroupMemberListResponse

typedef GPB_ENUM(KIMProtoFetchChatGroupMemberListResponse_FieldNumber) {
  KIMProtoFetchChatGroupMemberListResponse_FieldNumber_SessionId = 1,
  KIMProtoFetchChatGroupMemberListResponse_FieldNumber_GroupId = 2,
  KIMProtoFetchChatGroupMemberListResponse_FieldNumber_Result = 3,
  KIMProtoFetchChatGroupMemberListResponse_FieldNumber_GroupMemberArray = 4,
  KIMProtoFetchChatGroupMemberListResponse_FieldNumber_Sign = 5,
};

@interface KIMProtoFetchChatGroupMemberListResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite) KIMProtoFetchChatGroupMemberListResponse_FetchChatGroupMemberListResponseResult result;

@property(nonatomic, readwrite) BOOL hasResult;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo*> *groupMemberArray;
/** The number of items in @c groupMemberArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupMemberArray_Count;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo

typedef GPB_ENUM(KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo_FieldNumber) {
  KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo_FieldNumber_UserAccount = 1,
  KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo_FieldNumber_GroupNickName = 2,
};

@interface KIMProtoFetchChatGroupMemberListResponse_ChatGroupMemberInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userAccount;
/** Test to see if @c userAccount has been set. */
@property(nonatomic, readwrite) BOOL hasUserAccount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupNickName;
/** Test to see if @c groupNickName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupNickName;

@end

#pragma mark - KIMProtoFetchChatGroupListRequest

typedef GPB_ENUM(KIMProtoFetchChatGroupListRequest_FieldNumber) {
  KIMProtoFetchChatGroupListRequest_FieldNumber_SessionId = 1,
};

@interface KIMProtoFetchChatGroupListRequest : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@end

#pragma mark - KIMProtoFetchChatGroupListResponse

typedef GPB_ENUM(KIMProtoFetchChatGroupListResponse_FieldNumber) {
  KIMProtoFetchChatGroupListResponse_FieldNumber_SessionId = 1,
  KIMProtoFetchChatGroupListResponse_FieldNumber_GroupArray = 2,
};

@interface KIMProtoFetchChatGroupListResponse : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KIMProtoFetchChatGroupListResponse_GroupInfo*> *groupArray;
/** The number of items in @c groupArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupArray_Count;

@end

#pragma mark - KIMProtoFetchChatGroupListResponse_GroupInfo

typedef GPB_ENUM(KIMProtoFetchChatGroupListResponse_GroupInfo_FieldNumber) {
  KIMProtoFetchChatGroupListResponse_GroupInfo_FieldNumber_GroupId = 1,
  KIMProtoFetchChatGroupListResponse_GroupInfo_FieldNumber_GroupName = 2,
};

@interface KIMProtoFetchChatGroupListResponse_GroupInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;
/** Test to see if @c groupName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupName;

@end

#pragma mark - KIMProtoGroupChatMessage

typedef GPB_ENUM(KIMProtoGroupChatMessage_FieldNumber) {
  KIMProtoGroupChatMessage_FieldNumber_SessionId = 1,
  KIMProtoGroupChatMessage_FieldNumber_Sender = 2,
  KIMProtoGroupChatMessage_FieldNumber_GroupId = 3,
  KIMProtoGroupChatMessage_FieldNumber_Content = 4,
  KIMProtoGroupChatMessage_FieldNumber_MsgId = 5,
  KIMProtoGroupChatMessage_FieldNumber_Timestamp = 6,
  KIMProtoGroupChatMessage_FieldNumber_Sign = 7,
};

/**
 * 群消息
 **/
@interface KIMProtoGroupChatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 发送者账号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;
/** Test to see if @c sender has been set. */
@property(nonatomic, readwrite) BOOL hasSender;

/** 群ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 消息Id */
@property(nonatomic, readwrite) uint64_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
/** 时间戳 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** 消息签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;
/** Test to see if @c sign has been set. */
@property(nonatomic, readwrite) BOOL hasSign;

@end

#pragma mark - KIMProtoPullGroupChatMessage

typedef GPB_ENUM(KIMProtoPullGroupChatMessage_FieldNumber) {
  KIMProtoPullGroupChatMessage_FieldNumber_SessionId = 1,
  KIMProtoPullGroupChatMessage_FieldNumber_GroupId = 2,
  KIMProtoPullGroupChatMessage_FieldNumber_MessageId = 3,
};

/**
 * 拉取群消息
 **/
@interface KIMProtoPullGroupChatMessage : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

/** 群ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;
/** Test to see if @c groupId has been set. */
@property(nonatomic, readwrite) BOOL hasGroupId;

/** 拉取在messageID之后的消息 */
@property(nonatomic, readwrite) uint64_t messageId;

@property(nonatomic, readwrite) BOOL hasMessageId;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
